@import '../../styles/base';

$base-smallCard-postInfo-padding-h: 35px;
$base-smallCard-postInfo-padding-w: 80px;
$base-text-font-size: 24px;
$base-text-line-height: 34px;
$base-postInfo-padding-h: 162px;
$base-postInfo-padding-w: 80px;
$base-title-font-size: 36px;
$base-title-line-height: 43px;

.feedWrapper {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  row-gap: calculateRem(80px);
  margin-bottom: calculateRem(80px);
  width: 100vw;
  cursor: pointer;

  @include device(mobile) {
    display: flex;
    flex-direction: column;
    gap: 0;
  }
}

.smallCard {
  background-color: white;
  box-shadow: 0px 6px 10px 0px #0000001a;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-column-start: span 3;
  position: relative;

  @include device(mobile) {
    margin-bottom: calculateRem(40px);
  }

  &__img {
    width: 100%;
    overflow: hidden;
    aspect-ratio: 1 / 1;
    grid-column: 1 / 2;
  }

  &__postInfo {
    display: flex;
    flex-direction: column;
    justify-content: center;
    grid-column: 2 / 6;
    padding: calculateRem($base-smallCard-postInfo-padding-h)
      calculateRem($base-smallCard-postInfo-padding-w);
    gap: calculateRem(14px);

    @include device(laptop) {
      padding: calculateRem(calc($base-smallCard-postInfo-padding-h * (3 / 4)))
        calculateRem(calc($base-smallCard-postInfo-padding-w * (3 / 4)));
      gap: calculateRem(calc(14px * (3 / 4)));
    }

    @include device(tablet) {
      padding: calculateRem(calc($base-smallCard-postInfo-padding-h * (1 / 3)))
        calculateRem(calc($base-smallCard-postInfo-padding-w * (1 / 3)));
      gap: calculateRem(calc(14px * (1 / 3)));
    }

    @include device(mobile) {
      padding: calculateRem(calc($base-smallCard-postInfo-padding-h * (1 / 8)))
        calculateRem(calc($base-smallCard-postInfo-padding-w * (1 / 5)));
      gap: calculateRem(calc(14px));
    }
  }

  &__moreButton {
    position: absolute;
    bottom: calculateRem(40px);
    right: calculateRem(40px);

    @include device(laptop) {
      bottom: calculateRem(calc(40px * (3 / 4)));
      right: calculateRem(calc(40px * (3 / 4)));
    }
    @include device(tablet) {
      bottom: calculateRem(calc(40px * (1 / 4)));
      right: calculateRem(calc(40px * (1 / 4)));
    }
    @include device(mobile) {
      bottom: calculateRem(calc(40px * (1 / 5)));
      right: calculateRem(calc(40px * (1 / 4)));
      height: 5px;
    }
  }
}

.smallCard[data-position='reverse'] {
  grid-auto-flow: dense;
}

.smallCard[data-position='reverse'] .smallCard__img {
  grid-column: 3 / 4;
}

.smallCard[data-position='reverse'] .smallCard__postInfo {
  grid-column: 1 / 3;
}

.smallCard[data-position='reverse'] .smallCard__moreButton {
  right: calculateRem(calc(40px + 40px + 300px));

  @include device(laptop) {
    right: calculateRem(calc(40px + 300px) * (3 / 4));
  }

  @include device(mobile) {
    right: calculateRem(130px);
  }
}

.bigCard {
  background-color: white;
  box-shadow: 0px 6px 10px 0px #0000001a;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-column: 3 / span 4;
  position: relative;

  @include device(mobile) {
    margin-bottom: calculateRem(40px);
  }

  &__img {
    width: 100%;
    aspect-ratio: 1 / 1;
    grid-column: 1 / 2;
    overflow: hidden;
  }

  &__postInfo {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: calculateRem(24px);
    grid-column: 2 / 3;
    padding: calculateRem($base-postInfo-padding-h)
      calculateRem($base-postInfo-padding-w);

    @include device(laptop) {
      padding: calculateRem(calc($base-postInfo-padding-h * (3 / 4)))
        calculateRem(calc($base-postInfo-padding-w * (3 / 4)));
    }

    @include device(tablet) {
      padding: calculateRem(calc($base-postInfo-padding-h * (1 / 3)))
        calculateRem(calc($base-postInfo-padding-w * (1 / 3)));
    }

    @include device(mobile) {
      padding: calculateRem(calc($base-postInfo-padding-h * (1 / 5)))
        calculateRem(calc($base-postInfo-padding-w * (1 / 4)));
    }
  }
}

.bigCard:last-child {
  @include device(mobile) {
    margin-bottom: -40px;
  }
}

.bigCard[data-position='reverse'] {
  grid-column: 1 / span 4;
}

.article {
  max-height: calculateRem(calc($base-text-line-height * 2));
  overflow: hidden;
  text-overflow: hidden;
}

.author,
.article {
  font-weight: 400;
  font-size: calculateRem($base-text-font-size);
  line-height: calculateRem($base-text-line-height);
  color: $text-color;

  @include device(laptop) {
    font-size: calculateRem(calc($base-text-font-size * (3 / 4)));
    line-height: calculateRem(calc($base-text-line-height * (3 / 4)));
    max-height: calculateRem(calc(($base-text-line-height * (3 / 4)) * 2));
  }

  @include device(tablet) {
    font-size: calculateRem(calc($base-text-font-size * (2 / 4)));
    line-height: calculateRem(calc($base-text-line-height * (2 / 4)));
    max-height: calculateRem(calc(($base-text-line-height * (2 / 4)) * 1.5));
  }

  @include device(mobile) {
    font-size: calculateRem(calc($base-text-font-size * (1 / 3)));
    line-height: calculateRem(calc($base-text-line-height * (1 / 3)));
    max-height: calculateRem(calc(($base-text-line-height * (1 / 3)) * 2));
  }
}

.title {
  font-weight: 700;
  font-size: calculateRem($base-title-font-size);
  line-height: calculateRem($base-title-line-height);
  max-height: calculateRem(calc($base-title-line-height * 2));
  overflow: hidden;
  color: $text-gradient;

  @include device(laptop) {
    font-size: calculateRem(calc($base-title-font-size * (3 / 4)));
    line-height: calculateRem(calc($base-title-line-height * (3 / 4)));
    max-height: calculateRem(calc(($base-title-line-height * (3 / 4)) * 2));
  }

  @include device(tablet) {
    font-size: calculateRem(calc($base-title-font-size * (2 / 4)));
    line-height: calculateRem(calc($base-title-line-height * (2 / 4)));
    max-height: calculateRem(calc(($base-title-line-height * (2 / 4)) * 2));
  }

  @include device(mobile) {
    font-size: calculateRem(calc($base-title-font-size * (1 / 4)));
    line-height: calculateRem(calc($base-title-line-height * (1 / 4)));
    max-height: calculateRem(calc(($base-title-line-height * (1 / 4)) * 2));
  }
}
